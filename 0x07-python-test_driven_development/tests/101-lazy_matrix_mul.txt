##################################
Tests for the lazy matrix function
##################################

>>> matrix_mul = __import__("100-matrix_mul").matrix_mul
>>> matrix_mul((1, 1), [[2, 3]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list
>>> matrix_mul([[7, 3]], (2, 3))
Traceback (most recent call last):
    ...
TypeError: m_b must be a list
>>> matrix_mul([7, 3], [[2, 3]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists
>>> matrix_mul([[7, 3]], [2, 3])
Traceback (most recent call last):
    ...
TypeError: m_b must be a list of lists
>>> matrix_mul([[]], [[4, 7]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty
>>> matrix_mul([[3, 6]], [[]])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty
>>> matrix_mul([[3, "6"]], [[4, 9]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[3, 6]], [[4, "9"]])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats
>>> matrix_mul([[3, 6], [4, 5, 7]], [[4, 9]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size
>>> matrix_mul([[3, 6]], [[4, 9], [5, 6, 2]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size
